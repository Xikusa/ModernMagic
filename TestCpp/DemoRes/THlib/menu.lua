menu={}function menu:FlyIn(dir,y)	self.alpha=1	if dir=='left' then self.x=-128 elseif dir=='right' then self.x=768 end	task.Clear(self)	task.New(self,function()		task.MoveTo(320,y or self.y,30,2)		self.locked=false	end)endfunction menu:FlyOut(dir,y)	local x	if dir=='left' then x=-128 elseif dir=='right' then x=768 end	task.Clear(self)	if not self.locked then		task.New(self,function()			self.locked=true			task.MoveTo(x,y or self.y,30,1)		end)	endendfunction menu:FadeIn()	self.x=320	task.Clear(self)	task.New(self,function()		for i=0,29 do			self.alpha=i/29			task.Wait()		end		self.locked=false	end)endfunction menu:FadeOut()	task.Clear(self)	if not self.locked then		task.New(self,function()			self.locked=true			for i=29,0,-1 do				self.alpha=i/29				task.Wait()			end		end)	endendfunction menu:MoveTo(x1,y1,x2,y2,t,mode)	self.x=x1 or self.x self.y=y1 or self.y	task.Clear(self)	task.New(self,function() task.MoveTo(x2 or self.x,y2 or self.y,t,mode) end)endreplay_saver=Class(object)function replay_saver:init(filenames,exit_func)	self.layer=LAYER_TOP	self.group=GROUP_GHOST	self.alpha=1	self.matrix=''	for i=0x20,0x7F do		if i%16==15 then self.matrix=self.matrix..string.char(i)..'\n' else self.matrix=self.matrix..string.char(i) end	end	self.matrix=self.matrix..'\n'	self.x=-128	self.y=240	self.filenames=filenames	self.exit_func=exit_func	self.bound=false	self.posx=1	self.posy=4	self.text=''	self.forbidden={['\\']=true,['/']=true,[':']=true,['*']=true,['?']=true,['"']=true,['<']=true,['>']=true,['|']=true}	self.title='Save Replay'	self.locked=trueendfunction replay_saver:frame()	task.Do(self)	if self.locked then return end	if GetLastKey()==setting.keys.up    then self.posy=self.posy-1 PlaySound('select00',0.3) end	if GetLastKey()==setting.keys.down  then self.posy=self.posy+1 PlaySound('select00',0.3) end	if GetLastKey()==setting.keys.left  then self.posx=self.posx-1 PlaySound('select00',0.3) end	if GetLastKey()==setting.keys.right then self.posx=self.posx+1 PlaySound('select00',0.3) end	self.posx=(self.posx+16)%16	self.posy=(self.posy+ 6)% 6	if KeyIsPressed'shoot' then		if self.posx==15 and self.posy==5 then			lfs.mkdir('replay\\'..setting.mod)			if FileExist('replay\\'..setting.mod..'\\'..self.text..'.rpy') then				self.title='File name exists'				PlaySound('invalid',0.5)			elseif  self.text=='' then				self.title='Need a file name'				PlaySound('invalid',0.5)			else				os.execute('zip -q "replay\\'..setting.mod..'\\'..self.text..'.rpy" "replay\\temp\\'..table.concat(self.filenames,'" "replay\\temp\\')..'"')				os.execute('del "replay\\temp\\'..table.concat(self.filenames,'" "replay\\temp\\')..'"')				if self.exit_func then self.exit_func() end				PlaySound('extend',0.5)			end			return		end		if #self.text==16 then			self.posx=15 self.posy=5		else			local char=string.char(0x20+self.posy*0x10+self.posx)			if self.forbidden[char] then				PlaySound('invalid',0.5)				self.title='Invalid char'			else				self.text=self.text..char				PlaySound('ok00',0.3)			end		end	end	if KeyIsPressed'spell' then		PlaySound('cancel00',0.3)		if #self.text==0 then			if self.exit_func then self.exit_func() end		else			self.text=string.sub(self.text,1,-2)		end	end	if GetLastKey()==KEY_ESCAPE then		if self.exit_func then self.exit_func() end		PlaySound('cancel00',0.3)	endendfunction replay_saver:render()	SetImageState('white','',Color(self.alpha*192,  0,  0,  0))	RenderRect('white',self.x-108,self.x+108,self.y-128,self.y+128)	SetImageState('white','',Color(self.alpha*255,128,128,128))	RenderRect('white',self.x+(self.posx-8)*12,self.x+(self.posx-7)*12,self.y+(2-self.posy)*23,self.y+(3-self.posy)*23)	SetFontState('menu','',Color(self.alpha*255,  0,  0,  0))	RenderText('menu',self.title..'\n\n'..self.matrix..self.text..string.rep('-',16-#self.text),self.x+1,self.y-1,0.5,'centerpoint')	SetFontState('menu','',Color(self.alpha*255,255,255,255))	RenderText('menu',self.title..'\n\n'..self.matrix..self.text..string.rep('-',16-#self.text),self.x,self.y,0.5,'centerpoint')endreplay_loader=Class(object)function replay_loader:init(exit_func)	self.layer=LAYER_TOP	self.group=GROUP_GHOST	self.alpha=1	self.exit_func=exit_func	self.x=768 self.y=240	self.bound=false	self.locked=true	self.sub_menu=false	self.dir='./replay/'..setting.mod..'/'	self.depth=0	replay_loader.reload_dir(self)endfunction replay_loader:reload_dir()	self.zfilenames={}	for zfn in lfs.dir(self.dir) do		if zfn~='.' and zfn~='..' then			table.insert(self.zfilenames,{zfn,lfs.attributes(self.dir..zfn,'mode')=='directory'})		end	end	self.npage=max(int((#(self.zfilenames)-1)/8)+1,1)	self.page=0	self.pos=0	replay_loader.refresh_text(self)endfunction replay_loader:refresh_text()	self.text=''	for i=self.page*8+1,self.page*8+8 do		if self.zfilenames[i] then			local zfn=self.zfilenames[i][1]			if string.sub(zfn,-4,-1)=='.rpy' then zfn=string.sub(zfn,1,-5) end			zfn=string.sub(zfn,1,16)			if self.zfilenames[i][2] then				self.text=self.text..'<'..zfn..'>\n'			else				self.text=self.text..' '..zfn..' \n'			end		end	endendfunction replay_loader:frame()	task.Do(self)	if self.locked then return end	if self.sub_menu then		if GetLastKey()==setting.keys.up    then self.pos2=self.pos2-1 PlaySound('select00',0.3) end		if GetLastKey()==setting.keys.down  then self.pos2=self.pos2+1 PlaySound('select00',0.3) end		self.pos2=(self.pos2+(#(self.replaynames)))%(#(self.replaynames))		if KeyIsPressed'shoot'then			PlaySound('ok00',0.3)			if self.exit_func then self.exit_func(self.zipfilename,self.replaynames[self.pos2+1]) end		end		if KeyIsPressed'spell'then			self.sub_menu=false			PlaySound('cancel00',0.3)		end	else		if GetLastKey()==setting.keys.up    then self.pos=self.pos-1 PlaySound('select00',0.3) end		if GetLastKey()==setting.keys.down  then self.pos=self.pos+1 PlaySound('select00',0.3) end		if GetLastKey()==setting.keys.left  then			self.page=self.page-1			self.page=(self.page+self.npage)%self.npage			PlaySound('select00',0.3)			replay_loader.refresh_text(self)		end		if GetLastKey()==setting.keys.right then			self.page=self.page+1			self.page=(self.page+self.npage)%self.npage			PlaySound('select00',0.3)			replay_loader.refresh_text(self)		end		self.pos=(self.pos+8)%8		if KeyIsPressed'shoot'then			if self.zfilenames[self.pos+1+self.page*8] then				if self.zfilenames[self.pos+1+self.page*8][2] then					self.dir=self.dir..self.zfilenames[self.pos+1+self.page*8][1]..'/'					replay_loader.reload_dir(self)					self.depth=self.depth+1					PlaySound('ok00',0.3)				else					local zipfile=zip.open(self.dir..self.zfilenames[self.pos+1+self.page*8][1])					if zipfile==nil then PlaySound('invalid',0.5) else						self.zipfilename=string.sub(self.dir..self.zfilenames[self.pos+1+self.page*8][1],10)						self.replaynames={}						self.pos2=0						self.text2=''						for f in zipfile:files() do							f.filename=string.sub(f.filename,8)							self.text2=self.text2..string.sub(f.filename,6)..'\n'							table.insert(self.replaynames,f.filename)						end						zipfile:close()						self.sub_menu=true						PlaySound('ok00',0.3)					end				end			else PlaySound('invalid',0.5) end		end		if KeyIsPressed'spell'then			PlaySound('cancel00',0.3)			if self.depth==0 then				if self.exit_func then self.exit_func() end			else				self.dir=self.dir..'../'				replay_loader.reload_dir(self)				self.depth=self.depth-1			end		end	endendfunction replay_loader:render()	SetImageState('white','',Color(self.alpha*192,0,0,0))	RenderRect('white',self.x-120,self.x+120,self.y-127,self.y+127)	if self.sub_menu then		SetImageState('white','',Color(self.alpha*255,128,128,128))		RenderRect('white',self.x-108,self.x+108,self.y+46-self.pos2*23,self.y+69-self.pos2*23)		SetFontState('menu','',Color(self.alpha*255,  0,  0,  0))		RenderText('menu','Select Stage',self.x+1,self.y+114,0.5,'center')		RenderText('menu',self.text2,self.x+1,self.y+68,0.5,'center')		SetFontState('menu','',Color(self.alpha*255,255,255,255))		RenderText('menu','Select Stage',self.x,self.y+115,0.5,'center')		RenderText('menu',self.text2,self.x,self.y+69,0.5,'center')	else		SetImageState('white','',Color(self.alpha*255,128,128,128))		RenderRect('white',self.x-108,self.x+108,self.y+46-self.pos*23,self.y+69-self.pos*23)		SetFontState('menu','',Color(self.alpha*255,  0,  0,  0))		RenderText('menu','View Replay',self.x+1,self.y+114,0.5,'center')		RenderText('menu',self.text,self.x-107,self.y+68,0.5)		SetFontState('menu','',Color(self.alpha*255,255,255,255))		RenderText('menu','View Replay',self.x,self.y+115,0.5,'center')		RenderText('menu',self.text,self.x-108,self.y+69,0.5)	endendsimple_menu=Class(object)function simple_menu:init(title,content)	self.layer=LAYER_TOP	self.group=GROUP_GHOST	self.alpha=1	self.x=768 self.y=240	self.bound=false	self.locked=true	self.title=title	self.content=content	self.pos=1	if #content==0 then error('Cannot create an empty menu') end	if content[#content][1]=='exit' then self.exit_func=content[#content][2] content[#content]=nil end	self.w=0	for i=1,#content do		self.w=max(#(content[i][1]),self.w)	end	self.w=self.w+2	if self.title=='' then self.h=#content else self.h=#content+2 end	if self.title=='' then self.text='' else self.text=self.title..'\n\n' end	for i=1,#(self.content) do		self.text=self.text..self.content[i][1]		if i~=#(self.content) then self.text=self.text..'\n' end	endendfunction simple_menu:frame()	task.Do(self)	if self.locked then return end	if GetLastKey()==setting.keys.up   then self.pos=self.pos-1 PlaySound('select00',0.3) end	if GetLastKey()==setting.keys.down then self.pos=self.pos+1 PlaySound('select00',0.3) end	self.pos=(self.pos-1+#(self.content))%(#(self.content))+1	if KeyIsPressed'shoot' and self.content[self.pos][2] then self.content[self.pos][2]() PlaySound('ok00',0.3) end	if KeyIsPressed'spell' and self.exit_func then self.exit_func() PlaySound('cancel00',0.3) endendfunction simple_menu:render()	SetImageState('white','',Color(self.alpha*192,  0,  0,  0))	RenderRect('white',self.x-self.w*6-12,self.x+self.w*6+12,self.y-self.h*11.5-12,self.y+self.h*11.5+12)	SetImageState('white','',Color(self.alpha*255,128,128,128))	if self.title=='' then RenderRect('white',self.x-self.w*6,self.x+self.w*6,self.y+self.h*11.5-self.pos*23+23,self.y+self.h*11.5-self.pos*23)	else RenderRect('white',self.x-self.w*6,self.x+self.w*6,self.y+self.h*11.5-self.pos*23-23,self.y+self.h*11.5-self.pos*23-46) end	SetFontState('menu','',Color(self.alpha*255,  0,  0,  0))	RenderText('menu',self.text,self.x+1,self.y-1,0.5,'centerpoint')	SetFontState('menu','',Color(self.alpha*255,255,255,255))	RenderText('menu',self.text,self.x  ,self.y  ,0.5,'centerpoint')endsimple_image=Class(object)function simple_image:init(img,size)	self.layer=LAYER_TOP	self.group=GROUP_GHOST	self.bound=false	self.img=img self.hscale=size self.vscale=size	self.x=768 self.y=240	self.alpha=1endfunction simple_image:frame()	task.Do(self)endfunction simple_image:render()	SetImageState(self.img,'',Color(self.alpha*255,255,255,255))	object.render(self)end